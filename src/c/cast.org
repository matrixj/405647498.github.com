# -*- coding:utf-8 -*-
#+LANGUAGE:  zh
#+TITLE:     强制类型转换
#+AUTHOR:    纪秀峰
#+EMAIL:     jixiuf@gmail.com
#+DATE:     2011-10-26 三
#+DESCRIPTION:强制类型转换
#+KEYWORDS: C cast
#+OPTIONS:   H:2 num:nil toc:t \n:t @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil 
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+FILETAGS: @C
#+begin_src c
  long a =2;
  int   intVar= (*((int*) (&(a))));
  printf ("%d\n",intVar);
#+end_src
#+begin_src c
#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>
#include <string.h>
typedef struct MS {
  int a;
  int b;
} my_union;

int main(int argc, char *argv[]){

  long    longvar;
  struct MS *m= malloc(sizeof(my_union));
  m->a=1;
  m->b=2;
  longvar= (*((long*) (&(m))));
  printf ("%ld\n",longvar);
  return 0;
}
#+end_src
#+begin_src c
#include <stdio.h>
#include <stdlib.h>
#include <malloc.h>
#include <string.h>

#define CAST(new_type,old_object) (*((new_type *)(&(old_object))))

typedef struct MS {
  int a;
  int b;
} my_union;


int main(int argc, char *argv[]){

  long    longvar;
  struct MS *m= malloc(sizeof(my_union));
  m->a=1;
  m->b=2;
  longvar = CAST(long ,m);
  printf ("%ld\n",longvar);
  return 0;
}

#+end_src
