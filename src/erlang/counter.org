# -*- coding:utf-8 -*-
#+LANGUAGE:  zh
#+TITLE:     计数器,并行示例
#+AUTHOR:    纪秀峰
#+EMAIL:     jixiuf@gmail.com
#+DATE:     2011-11-12 六
#+DESCRIPTION:计数器,并行示例
#+KEYWORDS: erlang
#+OPTIONS:   H:2 num:nil toc:t \n:t @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+FILETAGS: @Erlang
#+begin_src erlang
  -module(counter).
  -export([start/0,loop/1,increment/1,value/1,stop/1]).

  %% First the interface functions.
  start() ->
      spawn(counter, loop, [0]).

  increment(Counter) ->
      Counter ! increment.

  value(Counter) ->
      Counter ! {self(),value},
      receive
          {Counter,Value} ->
              Value
      end.

  stop(Counter) ->
      Counter ! stop.

  %% The counter loop.
  loop(Val) ->
      receive
          increment ->
              loop(Val + 1);
          {From,value} ->
              From ! {self(),Val},
              loop(Val);
          stop ->                  % No recursive call here
              true;
          Other ->                 % All other messages
              loop(Val)
      end.

  %% P1=counter:start().
  %% counter:increment(P1).
  %% counter:value(P1).

#+end_src
